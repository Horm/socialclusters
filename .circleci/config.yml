version: 2.1

jobs:
  test_backend:
    docker:
      - image: circleci/openjdk:8
      - image: circleci/postgres:10.5
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: user_database
      - image: circleci/mongo:latest
        environment:
          MONGODB_DATABASE: content_database
    steps:
      - checkout
      - run: cd backend && gradle build --debug
  test_frontend:
    docker:
      - image: circleci/node:9.8.0
    steps:
      - checkout
      - run: cd frontend && npm install
      - run: cd frontend && npm run test-libs
  test_topic_analysis_service:
    docker:
      - image: circleci/python:3.6.4
    steps:
      - checkout
      - run: cd topic_analysis_service && sudo pip3 install -r requirements.txt
      - run: cd topic_analysis_service && sudo python3 -m unittest discover tests
  deploy:
    machine:
      enabled: true
    steps:
      - checkout
      #      - run:
      #          name: Install Docker client
      #          command: |
      #            set -x
      #            VER="17.03.0-ce"
      #            curl -L -o /tmp/docker-$VER.tgz https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz
      #            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
      #            mv /tmp/docker/* /usr/bin
      #
      #      - run:
      #          name: Install Docker Compose
      #          command: |
      #            curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
      #            chmod +x ~/docker-compose
      #            sudo mv ~/docker-compose /usr/local/bin/docker-compose
      - run: |
          cd docker
          docker-compose up -d
      - run:
          name: Build Backend
          command: |
            cd backend
            ./gradlew clean
            ./gradlew bootJar
            docker build -t socialclusters/backend .
      - run:
          name: Build Topic Analysis Service
          command: |
            cd topic_analysis_service && docker build -t socialclusters/topic_analysis_service .
      - run:
          name: Build API Call Service
          command: |
            cd platform_api_service && docker build -t socialclusters/platform_api_service .
      - run:
          name: Build Frontend
          command: |
            cd frontend && docker build -t socialclusters/frontend .
      - run:
          name: Build NGINX
          command: |
            cd nginx && docker build -t socialclusters/nginx .
      - run:
          name: Compose
          command: |
            cd docker && docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d



workflows:
  version: 2
  build_accept_deploy:
    jobs:
      - test_backend
      - test_frontend
      - test_topic_analysis_service
      - deploy:
          requires:
            - test_backend
            - test_frontend
            - test_topic_analysis_service

