buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.5.RELEASE")
    classpath 'org.postgresql:postgresql:9.4.1211.jre7'
    classpath 'org.jooq:jooq-codegen:3.7.4'
    classpath 'nu.studer:gradle-jooq-plugin:1.0.5'
  }
}

plugins {
  id 'org.jetbrains.kotlin.jvm' version '1.3.21'
}
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'nu.studer.jooq'

bootJar {
  baseName = 'gs-rest-service'
  version = '0.1.0'
}

repositories {
  mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
  compile "org.springframework.boot:spring-boot-starter-web"
  testCompile 'org.springframework.boot:spring-boot-starter-test'
  compile 'org.springframework.boot:spring-boot-starter-data-mongodb'
  testCompile 'com.jayway.jsonpath:json-path'
  compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
  compile "org.jetbrains.kotlin:kotlin-reflect"
  compile('org.springframework.boot:spring-boot-starter-jooq')
}

compileKotlin {
  kotlinOptions {
    jvmTarget = "1.8"
  }
}
compileTestKotlin {
  kotlinOptions {
    jvmTarget = "1.8"
  }
}

jooq {
  version = "3.11.7"

  userDatabase(sourceSets.main) {
    jdbc {
      url = "jdbc:postgresql://localhost:3312/user_database"
      user = 'postgres'
    }
    generator {

      database {
        name = 'org.jooq.util.postgres.PostgresDatabase'
        inputSchema = "public"
        unsignedTypes=false

      }
      generate {
        daos = true
        pojosEqualsAndHashCode = true

      }

      target {
        packageName = 'com.socialclusters.db.generated.user_database'
        directory = 'src/main/generated/java'
      }
    }
  }


}
