buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.5.RELEASE")
    classpath 'org.postgresql:postgresql:42.2.4'
    classpath 'nu.studer:gradle-jooq-plugin:+'
  }
}



plugins {
  id "org.jetbrains.kotlin.jvm" version "1.2.61"
  id "org.jetbrains.kotlin.plugin.spring" version "1.2.61"

  id "org.springframework.boot" version "2.0.4.RELEASE"
  id "io.spring.dependency-management" version "1.0.6.RELEASE"

  id "nu.studer.jooq" version "3.0.2"

  id "com.github.ben-manes.versions" version "0.20.0"

  id "org.flywaydb.flyway" version "5.2.4"
}

bootJar {
  baseName = 'gs-rest-service'
  version = '0.1.0'
}

repositories {
  mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
  compile "org.springframework.boot:spring-boot-starter-web"
  testCompile 'org.springframework.boot:spring-boot-starter-test'
  compile 'org.springframework.boot:spring-boot-starter-data-mongodb'
  implementation("org.springframework.boot:spring-boot-starter-jdbc")
  testCompile 'com.jayway.jsonpath:json-path'
  compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
  compile "org.jetbrains.kotlin:kotlin-reflect"

  compile 'org.jooq:jooq:+'
  compile 'org.jooq:jooq-meta:+'
  compile 'org.jooq:jooq-codegen:+'
  compile 'mysql:mysql-connector-java:+'

  implementation("org.postgresql:postgresql:42.2.4")
  jooqRuntime 'postgresql:postgresql:9.1-901.jdbc4'

  implementation("org.flywaydb:flyway-core:5.1.4")


  testImplementation("io.kotlintest:kotlintest-runner-junit5:3.1.9")
  testImplementation("io.kotlintest:kotlintest-extensions-spring:3.1.9")
  testImplementation("org.springframework.boot:spring-boot-starter-test") {
    exclude module: "junit"
  }
}


test {
  useJUnitPlatform()
}

jooq {
  version = "3.11.7"

  userDatabase(sourceSets.main) {
    jdbc {
      url = "jdbc:postgresql://localhost:3312/user_database"
      user = 'postgres'
    }
    generator {

      database {
        name = 'org.jooq.meta.postgres.PostgresDatabase'
        inputSchema = "public"
        unsignedTypes = false
        excludes = "flyway_schema_history"

      }
      generate {
        daos = true
        pojosEqualsAndHashCode = true

      }

      target {
        packageName = 'com.socialclusters.db.generated.user_database'
        directory = 'src/main/generated/java'
      }
    }
  }


}
flyway {
  url = 'jdbc:postgresql://localhost:3312/user_database'
  user = 'postgres'
  locations = ["filesystem:$project.projectDir/src/main/resources/db/migration"]
}

generateUserDatabaseJooqSchemaSource.dependsOn flywayClean, flywayMigrate
compileKotlin.dependsOn generateUserDatabaseJooqSchemaSource
